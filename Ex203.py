# ~*~ coding: utf-8 ~*~

'''
Главный повар решил устроить в лицее День Уважения к Повару.
Для этого он приготовил лицеистам N необычайно вкусных котлет и втайне
постановил, что первый пожаловавший отведать поварское кушанье школьник
должен получить наибольшее количество вкусных котлет, а каждый последующий -
строго меньше, чем предыдущий (повару очень не нравилось, когда к
приготовленному им обеду опаздывали и тот вынужден был остывать).

Конечно, введенное правило оставляет существенный произвол в числе котлет,
получаемых очередным явившимся лицеистом, и это число не в последнюю очередь
будет зависеть от предыдущего поведения лицеиста в столовой, а также
от волшебных слов, произносимых им. Например, 6 котлет могут быть в
результате распределены по одной из следующих четырех схем:
3+2+1 (три котлеты первому из пришедших школьников, две - второму и
одну - третьему), 4+2, 5+1 и 6 (все котлеты съедает счастливчик,
пришедший первым).

Напишите программу, определяющую, каким количеством различных
способов повар может распределить приготовленное лакомство среди школьников.
'''

def internet_solve(n):
    s = 1;
    for i in range(0, n):
        for j in range(0, n):
            for k in range(0, n):
                if i>j and j>k and i+j+k==n:
                    s += 1;
    print(u'Решение, найденное в интернете = ' + str(s));

def rec_func(x, limit):
    res = 0
    if x > limit:
        i = x - limit
    else:
        i = 1
    while (i < x):
        if x-i < limit:
            if (x-i > i):
                res += 1
            if i > 2: # Счёт более мелких вариантов не совпадает с ответами на больших числах
                res += rec_func(i, x-i)
        i += 1
    return res
    

if __name__ == '__main__':
    res = 0
    x = 99#int(input(u'Введи количество котлет: '))
    i = 0
    while (i < x):
        if (x-i > i):
            res += 1
        if i > 2:
            res += rec_func(i, x-i)
        i += 1
    print(u'Ответ = ' + str(res))
    internet_solve(x)